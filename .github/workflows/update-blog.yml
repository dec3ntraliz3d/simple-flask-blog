name: Update Blog

on:
 workflow_run:
   workflows: [Docker Build]
   types: [completed]
jobs:
  deploy:
    
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Get Terraform workflow run_id
        id: get-terraform-run
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const workflow_name = 'Terraform Main';
            const { owner, repo } = context.repo;
            const { data: workflows } = await github.rest.actions.listRepoWorkflows({ owner, repo });
            const terraform_workflow = workflows.workflows.find(w => w.name === workflow_name);
          
            if (!terraform_workflow) {
              throw new Error(`Workflow "${workflow_name}" not found`);
            }
          
            const { data: { workflow_runs } } = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: terraform_workflow.id,
              status: 'success',
              branch: context.ref.replace('refs/heads/', ''),
              per_page: 1
            });
          
            if (workflow_runs.length === 0) {
              throw new Error('No successful Terraform workflow runs found');
            }
          
            console.log(`Latest Terraform run ID: ${workflow_runs[0].id}`);
            return workflow_runs[0].id;

      - name: Get EC2 Public IP
        uses: actions/download-artifact@v4
        with:
          # Changing to IP. DNS may not be setup .
          name: ec2_public_ip
          github-token: ${{secrets.GITHUB_TOKEN}}
          run-id: ${{ steps.get-terraform-run.outputs.result }}
      - name: Put EC2 Public IP in env variable
        run: |
          echo "ec2_public_ip=$(cat ec2_public_ip.txt)" >> $GITHUB_ENV
      - name: Debug EC2 IP
        run: |
          echo "EC2 Public IP: ${{ env.ec2_public_ip }}"
        
      - name: SSH to EC2 and Deploy new docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{env.ec2_public_ip}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            if [ "$(docker ps -q -f name=blog)" ]; then
              docker stop blog
            fi
            docker rm blog
            docker run -d -p 80:5000 --name "blog" dec3ntraliz3d/blog:latest




